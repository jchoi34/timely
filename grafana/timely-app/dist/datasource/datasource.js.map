{"version":3,"sources":["../../src/datasource/datasource.js"],"names":["_","angular","dateMath","TimelyDatasource","instanceSettings","$q","backendSrv","templateSrv","contextSrv","type","name","jsonData","httpsPort","timelyHost","wsPort","basicAuths","url","_makeHttpsUrl","withCredentials","basicAuth","supportMetrics","tagKeys","aggregatorsPromise","filterTypesPromise","options","start","convertToTSDBTime","rangeRaw","from","end","to","qs","each","targets","target","metric","push","convertTargetToQuery","bind","queries","compact","isEmpty","d","defer","resolve","data","promise","groupByTags","query","filters","length","val","tagk","tags","key","performTimeSeriesQuery","then","response","metricToTargetMapping","mapMetricsToTargets","result","map","metricData","index","_saveTagKeys","transformMetricData","datasourceRequest","method","status","message","title","eventList","aggregator","annotation","results","annotationObject","annotations","isGlobal","globalAnnotations","event","description","time","Math","floor","startTime","text","notes","when","interpolated","replace","err","reject","responseTransform","value","metrics_regex","tag_names_regex","tag_values_regex","tag_names_suggest_regex","tag_values_suggest_regex","metrics_query","match","_performSuggestQuery","tag_names_query","_performMetricKeyLookup","tag_values_query","_performMetricKeyValueLookup","tag_names_suggest_query","tag_values_suggest_query","msResolution","reqBody","showQuery","_addCredentialOptions","headers","Object","keys","aggregateTags","tag","_get","q","max","keysArray","split","trim","keysQuery","splice","join","m","limit","tagvs","r","indexOf","tagks","tagv","relativeUrl","params","isArray","sort","md","metricLabel","createMetricLabel","dps","v","k","datapoints","alias","scopedVars","clone","label","tagData","toPairs","has","hide","shouldComputeRate","rate","rateOptions","counter","isCounter","counterMax","parseInt","counterResetValue","resetValue","disableDownsampling","interval","downsampleInterval","parseFloat","downsample","downsampleAggregator","downsampleFillPolicy","copy","filter_key","filter","tag_key","metrics","interpolatedTagValue","findIndex","every","tagV","tagK","date","roundUp","parse","valueOf"],"mappings":"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","file":"datasource.js","sourcesContent":["import _ from \"lodash\";\nimport angular from 'angular';\nimport * as dateMath from '../../../app/core/utils/datemath';\n\nexport class TimelyDatasource {\n\n  // arguments injected by angular\n  constructor(instanceSettings, $q, backendSrv, templateSrv, contextSrv) {\n    this.type = instanceSettings.type;\n    this.name = instanceSettings.name;\n\n    this.jsonData = instanceSettings.jsonData || {};\n    this.httpsPort = instanceSettings.jsonData.httpsPort;\n    this.timelyHost = instanceSettings.jsonData.timelyHost;\n    this.wsPort = instanceSettings.jsonData.wsPort;\n    if( !instanceSettings.jsonData.basicAuths){\n      instanceSettings.jsonData.basicAuths = false;\n    }\n\n    this.url = this._makeHttpsUrl()\n    this.withCredentials = true;\n    this.basicAuth = false;\n\n    this.supportMetrics = true;\n    this.tagKeys = {};\n\n    this.$q = $q;\n    this.backendSrv = backendSrv;\n    this.templateSrv = templateSrv;\n    this.contextSrv = contextSrv;\n\n    this.aggregatorsPromise = null;\n    this.filterTypesPromise = null;\n\n  }\n\n  // REQUIRED INTERFACE\n  query(options){\n    var start = this.convertToTSDBTime(options.rangeRaw.from, false);\n    var end = this.convertToTSDBTime(options.rangeRaw.to, true);\n    var qs = [];\n\n    _.each(options.targets, function(target) {\n      if (!target.metric) { return; }\n      qs.push(this.convertTargetToQuery(target, options));\n    }.bind(this) );\n\n    var queries = _.compact(qs);\n\n    // No valid targets, return the empty result to save a round trip.\n    if (_.isEmpty(queries)) {\n      var d = this.$q.defer();\n      d.resolve({ data: [] });\n      return d.promise;\n    }\n\n    var groupByTags = {};\n    _.each(queries, function(query) {\n      if (query.filters && query.filters.length > 0) {\n        _.each(query.filters, function(val) {\n          groupByTags[val.tagk] = true;\n        });\n      } else {\n        _.each(query.tags, function(val, key) {\n          groupByTags[key] = true;\n        });\n      }\n    });\n\n    return this.performTimeSeriesQuery(queries, start, end).then(function(response) {\n      var metricToTargetMapping = this.mapMetricsToTargets(response.data, options);\n      var result = _.map(response.data, function(metricData, index) {\n        index = metricToTargetMapping[index];\n        if (index === -1) {\n          index = 0;\n        }\n        this._saveTagKeys(metricData);\n\n        return this.transformMetricData(metricData, groupByTags, options.targets[index], options);\n      }.bind(this));\n      return { data: result };\n    }.bind(this));\n  }\n\n  // REQUIRED INTERFACE\n  testDatasource(){\n    return this.backendSrv.datasourceRequest({\n      url: this.url + '/version',\n      method: 'GET'\n    }).then(response => {\n      if (response.status === 200) {\n        return { status: \"success\", message: \"Data source is working\", title: \"Success\" };\n      }\n    });\n  }\n\n  // REQUIRED INTERFACE\n  annotationQuery(options){\n    var start = convertToTSDBTime(options.rangeRaw.from, false);\n    var end = convertToTSDBTime(options.rangeRaw.to, true);\n    var qs = [];\n    var eventList = [];\n\n    qs.push({ aggregator:\"sum\", metric:options.annotation.target });\n\n    var queries = _.compact(qs);\n\n    return this.performTimeSeriesQuery(queries, start, end).then(function(results) {\n      if(results.data[0]) {\n        var annotationObject = results.data[0].annotations;\n        if(options.annotation.isGlobal){\n          annotationObject = results.data[0].globalAnnotations;\n        }\n        if(annotationObject) {\n          _.each(annotationObject, function(annotation) {\n            var event = {\n              title: annotation.description,\n              time: Math.floor(annotation.startTime) * 1000,\n              text: annotation.notes,\n              annotation: options.annotation\n            };\n\n            eventList.push(event);\n          });\n        }\n      }\n      return eventList;\n\n    }.bind(this));\n  }\n\n  // REQUIRED INTERFACE\n  metricFindQuery(query) {\n    if (!query) { return this.$q.when([]); }\n\n    var interpolated;\n    try {\n      interpolated = this.templateSrv.replace(query);\n    }\n    catch (err) {\n      return this.$q.reject(err);\n    }\n\n    var responseTransform = function(result) {\n      return _.map(result, function(value) {\n        return {text: value};\n      });\n    };\n\n    var metrics_regex = /metrics\\((.*)\\)/;\n    var tag_names_regex = /tag_names\\((.*)\\)/;\n    var tag_values_regex = /tag_values\\((.*?),\\s?(.*)\\)/;\n    var tag_names_suggest_regex = /suggest_tagk\\((.*)\\)/;\n    var tag_values_suggest_regex = /suggest_tagv\\((.*)\\)/;\n\n    var metrics_query = interpolated.match(metrics_regex);\n    if (metrics_query) {\n      return this._performSuggestQuery(metrics_query[1], 'metrics').then(responseTransform);\n    }\n\n    var tag_names_query = interpolated.match(tag_names_regex);\n    if (tag_names_query) {\n      return this._performMetricKeyLookup(tag_names_query[1]).then(responseTransform);\n    }\n\n    var tag_values_query = interpolated.match(tag_values_regex);\n    if (tag_values_query) {\n      return this._performMetricKeyValueLookup(tag_values_query[1], tag_values_query[2]).then(responseTransform);\n    }\n\n    var tag_names_suggest_query = interpolated.match(tag_names_suggest_regex);\n    if (tag_names_suggest_query) {\n      return this._performSuggestQuery(tag_names_suggest_query[1], 'tagk').then(responseTransform);\n    }\n\n    var tag_values_suggest_query = interpolated.match(tag_values_suggest_regex);\n    if (tag_values_suggest_query) {\n      return this._performSuggestQuery(tag_values_suggest_query[1], 'tagv').then(responseTransform);\n    }\n\n    return this.$q.when([]);\n  }\n\n  performTimeSeriesQuery(queries, start, end){\n    var msResolution = true;\n\n    var reqBody = {\n      start: start,\n      queries: queries,\n      msResolution: msResolution,\n      globalAnnotations: true,\n      showQuery: true\n    };\n\n    // Relative queries (e.g. last hour) don't include an end time\n    if (end) {\n      reqBody.end = end;\n    }\n\n    var options = {\n      method: 'POST',\n      url: this.url + '/api/query',\n      data: reqBody\n    };\n\n    this._addCredentialOptions(options);\n\n    // In case the backend is 3rd-party hosted and does not suport OPTIONS, urlencoded requests\n    // go as POST rather than OPTIONS+POST\n    options.headers = { 'Content-Type': 'application/x-www-form-urlencoded' };\n\n    return this.backendSrv.datasourceRequest(options);\n  }\n\n  _saveTagKeys(metricData) {\n    var tagKeys = Object.keys(metricData.tags);\n    _.each(metricData.aggregateTags, function(tag) {\n      tagKeys.push(tag);\n    });\n\n    this.tagKeys[metricData.metric] = tagKeys;\n  }\n\n  suggestTagKeys(metric) {\n    return this.$q.when(this.tagKeys[metric] || []);\n  }\n\n  _performSuggestQuery(query, type) {\n    return this._get('/api/suggest', {type: type, q: query, max: 1000}).then(function(result) {\n      return result.data;\n    });\n  }\n\n  _performMetricKeyValueLookup(metric, keys) {\n\n    if(!metric || !keys) {\n      return $q.when([]);\n    }\n\n    var keysArray = keys.split(\",\").map(function(key) {\n      return key.trim();\n    });\n    var key = keysArray[0];\n    var keysQuery = key + \"=.*\";\n\n    if (keysArray.length > 1) {\n      keysQuery += \",\" + keysArray.splice(1).join(\",\");\n    }\n\n    var m = metric + \"{\" + keysQuery + \"}\";\n\n    return this._get('/api/search/lookup', {m: m, limit: 3000}).then(function(result) {\n      result = result.data.results;\n      var tagvs = [];\n      _.each(result, function(r) {\n        if (tagvs.indexOf(r.tags[key]) === -1) {\n          tagvs.push(r.tags[key]);\n        }\n      });\n      return tagvs;\n    });\n  }\n\n  _performMetricKeyLookup(metric) {\n    if(!metric) { return this.$q.when([]); }\n\n    return this._get('/api/search/lookup', {m: metric, limit: 1000}).then(function(result) {\n      result = result.data.results;\n      var tagks = [];\n      _.each(result, function(r) {\n        _.each(r.tags, function(tagv, tagk) {\n          if(tagks.indexOf(tagk) === -1) {\n            tagks.push(tagk);\n          }\n        });\n      });\n      return tagks;\n    });\n  }\n\n  _get(relativeUrl, params) {\n    var options = {\n      method: 'GET',\n      url: this.url + relativeUrl,\n      params: params,\n    };\n\n    this._addCredentialOptions(options);\n\n    return this.backendSrv.datasourceRequest(options);\n  }\n\n  _addCredentialOptions(options) {\n    if (this.basicAuth || this.withCredentials) {\n      options.withCredentials = true;\n    }\n    if (this.basicAuth) {\n      options.headers = {\"Authorization\": this.basicAuth};\n    }\n  }\n\n  getAggregators(){\n    if (this.aggregatorsPromise) { return this.aggregatorsPromise; }\n\n    this.aggregatorsPromise = this._get('/api/aggregators').then(function(result) {\n      if (result.data && _.isArray(result.data)) {\n        return result.data.sort();\n      }\n      return [];\n    });\n    return this.aggregatorsPromise;\n  }\n\n  getFilterTypes() {\n    if (this.filterTypesPromise) { return this.filterTypesPromise; }\n\n    // filters are for a newer opentsdb api version than Timely originally copied.\n    this.filterTypesPromise = this._get('/api/aggregators').then(function(result) {\n      return [];\n    });\n    return this.filterTypesPromise;\n  }\n\n  transformMetricData(md, groupByTags, target, options) {\n    var metricLabel = this.createMetricLabel(md, target, groupByTags, options);\n    var dps = [];\n\n    // TSDB returns datapoints has a hash of ts => value.\n    // Can't use _.pairs(invert()) because it stringifies keys/values\n    _.each(md.dps, function (v, k) {\n      dps.push([v, k * 1]);\n    });\n\n    return { target: metricLabel, datapoints: dps };\n  }\n\n  createMetricLabel(md, target, groupByTags, options) {\n    if (target.alias) {\n      var scopedVars = _.clone(options.scopedVars || {});\n      _.each(md.tags, function(value, key) {\n        scopedVars['tag_' + key] = {value: value};\n      });\n      return this.templateSrv.replace(target.alias, scopedVars);\n    }\n\n    var label = md.metric;\n    var tagData = [];\n\n    if (!_.isEmpty(md.tags)) {\n      _.each(_.toPairs(md.tags), function(tag) {\n        if (_.has(groupByTags, tag[0])) {\n          tagData.push(tag[0] + \"=\" + tag[1]);\n        }\n      });\n    }\n\n    if (!_.isEmpty(tagData)) {\n      label += \"{\" + tagData.join(\", \") + \"}\";\n    }\n\n    return label;\n  }\n\n  convertTargetToQuery(target, options) {\n    if (!target.metric || target.hide) {\n      return null;\n    }\n\n    var query = {\n      metric: this.templateSrv.replace(target.metric, options.scopedVars),\n      aggregator: \"avg\"\n    };\n\n    if (target.aggregator) {\n      query.aggregator = this.templateSrv.replace(target.aggregator);\n    }\n\n    if (target.shouldComputeRate) {\n      query.rate = true;\n      query.rateOptions = {\n        counter: !!target.isCounter\n      };\n\n      if (target.counterMax && target.counterMax.length) {\n        query.rateOptions.counterMax = parseInt(target.counterMax);\n      }\n\n      if (target.counterResetValue && target.counterResetValue.length) {\n        query.rateOptions.resetValue = parseInt(target.counterResetValue);\n      }\n    }\n\n    if (!target.disableDownsampling) {\n      var interval =  this.templateSrv.replace(target.downsampleInterval || options.interval);\n\n      if (interval.match(/\\.[0-9]+s/)) {\n        interval = parseFloat(interval)*1000 + \"ms\";\n      }\n\n      query.downsample = interval + \"-\" + target.downsampleAggregator;\n\n      if (target.downsampleFillPolicy && target.downsampleFillPolicy !== \"none\") {\n        query.downsample += \"-\" + target.downsampleFillPolicy;\n      }\n    }\n\n    if (target.filters && target.filters.length > 0) {\n      query.filters = angular.copy(target.filters);\n      if(query.filters){\n        for(var filter_key in query.filters){\n          query.filters[filter_key].filter = this.templateSrv.replace(query.filters[filter_key].filter, options.scopedVars, 'pipe');\n        }\n      }\n    } else {\n      query.tags = angular.copy(target.tags);\n      if(query.tags){\n        for(var tag_key in query.tags){\n          query.tags[tag_key] = this.templateSrv.replace(query.tags[tag_key], options.scopedVars, 'pipe');\n        }\n      }\n    }\n\n    return query;\n  }\n\n  mapMetricsToTargets(metrics, options) {\n    var interpolatedTagValue;\n    return _.map(metrics, function(metricData) {\n      return _.findIndex(options.targets, function(target) {\n        if (target.filters && target.filters.length > 0) {\n          return target.metric === metricData.metric;\n        } else {\n          return target.metric === metricData.metric && _.every(target.tags, function(tagV, tagK) {\n                interpolatedTagValue = this.templateSrv.replace(tagV, options.scopedVars, 'pipe');\n                return metricData.tags[tagK] === interpolatedTagValue || interpolatedTagValue === \"*\";\n              }.bind(this));\n        }\n      }.bind(this));\n    }.bind(this));\n  }\n\n  convertToTSDBTime(date, roundUp) {\n    if (date === 'now') {\n      return null;\n    }\n\n    date = dateMath.parse(date, roundUp);\n    return date.valueOf();\n  }\n\n  _makeHttpsUrl(){\n    return 'https://' + this.timelyHost + ':' + this.httpsPort\n  }\n\n  _makeWsUrl(){\n    return 'ws://' + this.timelyHost + ':' + this.wsPort\n  }\n\n}\n"]}